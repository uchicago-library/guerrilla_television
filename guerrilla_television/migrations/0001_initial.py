# Generated by Django 4.1.7 on 2023-03-22 14:24

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('wagtailcore', '0083_workflowcontenttype'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('value', models.CharField(blank=True, max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('value', models.CharField(blank=True, max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('value', models.CharField(blank=True, max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('value', models.CharField(blank=True, max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Producer',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('value', models.CharField(blank=True, max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='ProductionDate',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('value', models.CharField(blank=True, max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('value', models.CharField(blank=True, max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='URL',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('value', models.URLField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='VideoTapeFormat',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('value', models.CharField(blank=True, max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='GuerrillaTelevisionItemPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('content', models.TextField(blank=True)),
                ('excerpt', models.TextField(blank=True)),
                ('permalink', models.URLField(blank=True)),
                ('additional_copies', models.TextField(blank=True)),
                ('color', models.TextField(blank=True)),
                ('control_number', models.IntegerField(blank=True, null=True)),
                ('date_notation', models.TextField(blank=True)),
                ('number_of_reels', models.TextField(blank=True)),
                ('running_time', models.TextField(blank=True)),
                ('sound', models.IntegerField(blank=True, null=True)),
                ('wpzoom_post_embed_code', models.TextField(blank=True)),
                ('general_note', models.TextField(blank=True)),
                ('staff_comments', models.TextField(blank=True)),
                ('old_number', models.TextField(blank=True)),
                ('alternative_titles', models.TextField(blank=True)),
                ('titles_on_reel', models.TextField(blank=True)),
                ('main_credits', models.TextField(blank=True)),
                ('additional_credits', models.TextField(blank=True)),
                ('performers', models.TextField(blank=True)),
                ('location_of_production', models.TextField(blank=True)),
                ('generation', models.IntegerField(blank=True, null=True)),
                ('video_start_point', models.TextField(blank=True)),
                ('condition', models.TextField(blank=True)),
                ('acquisition_source', models.TextField(blank=True)),
                ('actions', models.TextField(blank=True)),
                ('main_contributors', models.TextField(blank=True)),
                ('corporate_names', models.TextField(blank=True)),
                ('document_assets', models.TextField(blank=True)),
                ('related_items', models.TextField(blank=True)),
                ('related_records', models.TextField(blank=True)),
                ('vimeo_id', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.CharField(blank=True, max_length=255, null=True)),
                ('post_modified_date', models.DateTimeField(blank=True, null=True)),
                ('categories', models.ManyToManyField(to='guerrilla_television.category')),
                ('collections', models.ManyToManyField(to='guerrilla_television.collection')),
                ('genres', models.ManyToManyField(to='guerrilla_television.genre')),
                ('languages', models.ManyToManyField(to='guerrilla_television.language')),
                ('producers', models.ManyToManyField(to='guerrilla_television.producer')),
                ('production_dates', models.ManyToManyField(to='guerrilla_television.productiondate')),
                ('tags', models.ManyToManyField(to='guerrilla_television.tag')),
                ('urls', models.ManyToManyField(to='guerrilla_television.url')),
                ('video_tape_format', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='guerrilla_television.videotapeformat')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
    ]
